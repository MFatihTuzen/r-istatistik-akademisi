---
title: "R Programlama'da Veri yapıları - Vektörler"
author: "Dr. M. Fatih Tüzen"
format:
  revealjs:
    theme: white
    slide-number: true
    self-contained: true
    footer: 📺 R Programlama ve İstatistik Akademisi
    scrollable: true
execute:
  echo: true
  eval: true
  warning: false
  message: false
---

## Veri Yapıları – Giriş

### 📌 Veri Tipi vs Veri Yapısı

-   **Veri tipi**: Bir değerin türü *(numeric, character, logical, factor vb.)*
-   **Veri yapısı**: Verilerin bellekte düzenlenme biçimi

### 🗂️ R'da Temel Veri Yapıları

-   **Vektör** → Tek boyutlu, tek tip veri
-   **Matris** → İki boyutlu, tek tip veri
-   **Array** → Çok boyutlu, tek tip veri
-   **Data frame** → İki boyutlu, farklı tip veri
-   **Liste** → Esnek, farklı tipte veri tutabilir

### 💡 İpucu

Veri yapısı seçimi, veri tipini otomatik olarak etkilemez.\
Ama bazı yapılar **tek tip veri** kuralını zorunlu kılar.

## Vektörlere Giriş

### 📌 Tanım

-   R'daki **en temel veri yapısı**
-   Tek boyutlu
-   Tek tip veri içerir

### 🛠️ Vektör Oluşturma

-   `c()` fonksiyonu ile birleştime
-   `:` operatörü ile ardışık sayılar
-   `seq()` fonksiyonu ile sayı dizileri
-   `rep()` fonksiyonu ile tekrarlar

### 💡 İpucu

Vektörlerde farklı veri tipleri girerseniz **coercion** olur → tüm elemanlar ortak bir tipe dönüşür.

## Vektörlerde Elemanlara Erişim

### 📌 Temel Yöntem

-   Köşeli parantez `[]` kullanılır
-   İndeksler 1’den başlar

### 🔹 Tek Eleman

`v[3]` → 3. eleman

### 🔹 Birden Fazla Eleman

`v[c(1, 4)]` → 1. ve 4. eleman

### 🔹 Aralık

`v[2:5]` → 2’den 5’e kadar

### 🔹 Negatif İndeks

`v[-2]` → 2. eleman hariç

### 🔹 Mantıksal İndeks

`v[c(TRUE, FALSE, TRUE)]`

### 💡 İpucu

İndeksler **mutlaka** pozitif ya da negatif olmalı; karışık kullanılamaz.

## Vektörlerde Eleman Değiştirme

### 📌 Temel Mantık

-   Köşeli parantez `[]` ile erişilen elemana yeni değer atanır

### 🔹 Tek Eleman

`v[2] <- 99`

### 🔹 Birden Fazla Eleman

`v[c(1, 4)] <- c(100, 200)`

### 🔹 Aralık

`v[2:4] <- c(5, 6, 7)`

### 🔹 Mantıksal İndeks

`v[v > 10] <- 0`

💡 **İpucu**\
Atama yapılacak eleman sayısı ile değer sayısı eşleşmezse R geri dönüşümlü (recycling) atama yapar.

## Vektör Uzunluğu ve Yapısı

-   **Uzunluk**
    -   `length()` → Vektördeki eleman sayısını döndürür.
-   **Yapı**
    -   `str()` → Nesnenin yapısını gösterir.
    -   `summary()` → Özet istatistik bilgilerini verir.

::: callout-note
💡 Bu fonksiyonlar, veri analizi sürecinde veri yapısını hızlıca anlamak için sıkça kullanılır.
:::

## Vektörlerde Eleman Ekleme ve Silme

-   **Eleman Ekleme**
    -   `c()` → Yeni eleman(lar) eklemek için kullanılır.
    -   `append()` → Belirli bir pozisyona ekleme yapar.
-   **Eleman Silme**
    -   Negatif indeksleme (`-index`) → Belirli pozisyondaki elemanı siler.
    -   Mantıksal koşullar → Belirli koşula uyan eleman(lar) çıkarılır.

::: callout-note
💡 R'da vektörler sabit uzunlukta değildir; ekleme/silme işlemleri yeni bir vektör oluşturur.
:::

## Vektörlerde Aritmetik ve Karşılaştırma İşlemleri

-   **Aritmetik İşlemler**
    -   Toplama (+), çıkarma (-), çarpma (\*), bölme (/), üstel (\^)
    -   Eleman bazlı işlemler yapılır.
-   **Karşılaştırma İşlemleri**
    -   `<`, `<=`, `>`, `>=`, `==`, `!=`
    -   Mantıksal sonuç (`TRUE` / `FALSE`) döner.
-   **Geri dönüş**
    -   İşlemler yeni bir vektör oluşturur.
    -   Uzunluklar farklıysa *geri dönüşüm (recycling)* kuralı uygulanır.

::: callout-note
💡 Geri dönüşüm kuralında kısa vektör, uzun vektörün uzunluğu tamamlanana kadar tekrar eder.
:::

## Vektörlerde Tür Dönüşümü

-   **Temel Dönüşüm Fonksiyonları**
    -   `as.numeric()` → Sayısal (numeric) türüne çevirir.
    -   `as.character()` → Karakter türüne çevirir.
    -   `as.logical()` → Mantıksal (`TRUE`/`FALSE`) türüne çevirir.
-   **Otomatik Dönüşüm (Coercion)**
    -   Farklı türler aynı vektörde yer alırsa **en kapsayıcı türe** dönüşür.
    -   Öncelik sırası: `logical` → `integer/numeric` → `character`
-   **Dikkat Edilecek Noktalar**
    -   Dönüşüm sırasında bilgi kaybı olabilir.
    -   Uygun olmayan dönüşümler `NA` döndürebilir.
    -   Mantıksal → Sayısal dönüşüm: `TRUE`=1, `FALSE`=0
    -   Sayısal → Mantıksal dönüşüm: `0`=FALSE, `0 dışı`=TRUE

::: callout-warning
⚠️ Coercion beklenmedik sonuçlara yol açabilir.\
Örneğin `c(1, "a")` → karakter vektörü olur.
:::

## 📢 Takip Etmeyi Unutma!

📺 YouTube Kanalı: [**R Programlama ve İstatistik Akademisi**](https://www.youtube.com/@RistatistikAkademi)\
📘 Kitap: [R Programlama](https://rprogramlama.netlify.app/)\
📝 Blog: [A Statistician’s R Notebook](https://mfatihtuzen.netlify.app/)\
🐙 [GitHub Reposu](https://github.com/MFatihTuzen/r-istatistik-akademisi)
